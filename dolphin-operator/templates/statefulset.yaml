apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: operator-dolphin
  namespace: dolphin
  labels:
    component: dolphin-operator
spec:
  replicas: {{ .Values.replicaCount | int }}
  serviceName: operator-dolphin
  selector:
    matchLabels:
      component: dolphin-operator
  template:
    metadata:
      labels:
        component: dolphin-operator
        io.dolphin/app: operator
    spec:
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      hostNetwork: true
      affinity: 
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.dolphin/app: operator
            topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: quay-secret
      containers:
      - name: dolphin-operator
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9953
          hostPort: 9953
          name: prometheus
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9233
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9233
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        command:
        - /usr/bin/dolphin-operator
        - "--ingress-default-lb-mode={{ .Values.ingressController.loadbalancerMode | default "dedicated" }}"
        - "--enable-gateway-api={{ .Values.gatewayAPI.enabled | default "true" }}"
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DOLPHIN_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DOLPHIN_DEBUG
          valueFrom:
            configMapKeyRef:
              name: dolphin-config
              key: debug
              optional: true
        volumeMounts:
        - name: dolphin-config-path
          mountPath: /tmp/dolphin/config-map
          readOnly: true
        - name: log-volume
          mountPath: /app/logs
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: dolphin-operator
      terminationGracePeriodSeconds: 30
      volumes:
      - name: dolphin-config-path
        configMap:
          name: dolphin-config
          defaultMode: 420
    {{- if eq .Values.env "kind" }}
      - name: log-volume
        hostPath:
          path: /mnt/disks/logs/pv
          type: Directory
    {{- end }}
  {{- if eq .Values.env "bare-metal" }}
  volumeClaimTemplates:
    - metadata:
        name: log-volume
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.storage.className }}
        resources:
          requests:
            storage: {{ .Values.storage.size }}
  {{- end }}